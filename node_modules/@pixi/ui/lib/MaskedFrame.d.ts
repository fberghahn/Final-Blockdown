import { Container, FillStyleInputs, Graphics } from 'pixi.js';
export type MaskedFrameOptions = {
    target?: string | Container;
    mask?: string | Graphics;
    borderWidth?: number;
    borderColor?: FillStyleInputs;
};
/**
 * Draws a border or apply a mask of any shape to a container.
 * @example
 * new MaskedFrame({
 *     target: `avatar.png`,
 *     mask: `avatar_mask.png`,
 *     borderWidth: 5,
 *     borderColor: 0xFFFFFF,
 * });
 */
export declare class MaskedFrame extends Container {
    /** Target container. */
    target: Container;
    border: Graphics;
    protected _targetMask: Container;
    protected maskData: string | Graphics;
    protected borderWidth: number;
    protected borderColor: FillStyleInputs;
    constructor(options?: MaskedFrameOptions);
    /**
     * Initializes a component.
     * @param root0
     * @param root0.target - Container to apply a mask or a border.
     * @param root0.mask - Mask.
     * @param root0.borderWidth - Border width.
     * @param root0.borderColor - Border color.
     */
    init({ target, mask, borderWidth, borderColor }: MaskedFrameOptions): void;
    /**
     * Applies a mask to a target container.
     * @param mask
     */
    setMask(mask: string | Graphics): void;
    /**
     * Shows a border around the target Container, same shape as the mask.
     * @param borderWidth
     * @param borderColor
     */
    setBorder(borderWidth: number, borderColor: FillStyleInputs): void;
    /** Hides a border. */
    showBorder(): void;
    /** Hides a border. */
    hideBorder(): void;
}
//# sourceMappingURL=MaskedFrame.d.ts.map