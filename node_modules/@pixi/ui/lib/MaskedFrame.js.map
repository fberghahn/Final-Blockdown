{"version":3,"file":"MaskedFrame.js","sources":["../src/MaskedFrame.ts"],"sourcesContent":["import { Container, FillStyleInputs, Graphics, Sprite } from 'pixi.js';\nimport { getView } from './utils/helpers/view';\n\nexport type MaskedFrameOptions = {\n    target?: string | Container;\n    mask?: string | Graphics;\n    borderWidth?: number;\n    borderColor?: FillStyleInputs;\n};\n\n/**\n * Draws a border or apply a mask of any shape to a container.\n * @example\n * new MaskedFrame({\n *     target: `avatar.png`,\n *     mask: `avatar_mask.png`,\n *     borderWidth: 5,\n *     borderColor: 0xFFFFFF,\n * });\n */\nexport class MaskedFrame extends Container\n{\n    /** Target container. */\n    target: Container;\n    border = new Graphics();\n    protected _targetMask: Container;\n    protected maskData: string | Graphics;\n    protected borderWidth: number;\n    protected borderColor: FillStyleInputs;\n\n    constructor(options?: MaskedFrameOptions)\n    {\n        super();\n\n        if (options?.target)\n        {\n            this.init(options);\n        }\n    }\n\n    /**\n     * Initializes a component.\n     * @param root0\n     * @param root0.target - Container to apply a mask or a border.\n     * @param root0.mask - Mask.\n     * @param root0.borderWidth - Border width.\n     * @param root0.borderColor - Border color.\n     */\n    init({ target, mask, borderWidth, borderColor }: MaskedFrameOptions)\n    {\n        if (this.target)\n        {\n            this.removeChild(this.target);\n        }\n\n        this.target = getView(target);\n        this.addChild(this.border, this.target);\n\n        if (mask) this.setMask(mask);\n        if (borderWidth) this.setBorder(borderWidth, borderColor);\n    }\n\n    /**\n     * Applies a mask to a target container.\n     * @param mask\n     */\n    setMask(mask: string | Graphics)\n    {\n        this.maskData = mask;\n\n        this._targetMask = getView(mask);\n        this.addChild(this._targetMask);\n        this.target.mask = this._targetMask;\n    }\n\n    /**\n     * Shows a border around the target Container, same shape as the mask.\n     * @param borderWidth\n     * @param borderColor\n     */\n    setBorder(borderWidth: number, borderColor: FillStyleInputs)\n    {\n        this.borderWidth = borderWidth;\n        this.borderColor = borderColor;\n\n        this.showBorder();\n\n        if (this.maskData)\n        {\n            const borderMask = typeof this.maskData === 'string' ? Sprite.from(this.maskData) : this.maskData.clone(true);\n\n            borderMask.width += borderWidth * 2;\n            borderMask.height += borderWidth * 2;\n\n            this.mask = borderMask;\n            this.addChild(borderMask);\n            this._targetMask.position.set(borderWidth);\n        }\n    }\n\n    /** Hides a border. */\n    showBorder()\n    {\n        const width = this.borderWidth * 2;\n\n        this.border.clear()\n            .rect(0, 0, this.target.width + width, this.target.height + width)\n            .fill(this.borderColor);\n\n        this.target.x = this.borderWidth;\n        this.target.y = this.borderWidth;\n    }\n\n    /** Hides a border. */\n    hideBorder()\n    {\n        this.border.clear();\n    }\n}\n"],"names":["Container","Graphics","getView","Sprite"],"mappings":"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"}