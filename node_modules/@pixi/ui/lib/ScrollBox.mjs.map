{"version":3,"file":"ScrollBox.mjs","sources":["../src/ScrollBox.ts"],"sourcesContent":["import {\n    ColorSource,\n    Container,\n    DestroyOptions,\n    EventMode,\n    FederatedPointerEvent,\n    Graphics,\n    isMobile,\n    Point,\n    Ticker,\n} from 'pixi.js';\nimport { List } from './List';\nimport { Trackpad } from './utils/trackpad/Trackpad';\n\nimport type { ListOptions, ListType } from './List';\n\nexport type ScrollBoxOptions = {\n    width: number;\n    height: number;\n    background?: ColorSource;\n    type?: ListType;\n    radius?: number;\n    disableDynamicRendering?: boolean;\n    disableEasing?: boolean;\n    dragTrashHold?: number;\n    globalScroll?: boolean;\n    shiftScroll?: boolean;\n} & Omit<ListOptions, 'children'>;\n\n/**\n * Scrollable view, for arranging lists of Pixi container-based elements.\n *\n * Items, that are out of the visible area, are not rendered by default.\n * This behavior can be changed by setting 'disableDynamicRendering' option to true.\n * @example\n * new ScrollBox({\n *     background: 0XFFFFFF,\n *     width: 200,\n *     height: 300,\n *     items: [\n *         new Graphics().drawRect(0, 0, 200, 50).fill(0x000000),\n *         new Graphics().drawRect(0, 0, 200, 50).fill(0x000000),\n *         new Graphics().drawRect(0, 0, 200, 50).fill(0x000000),\n *         new Graphics().drawRect(0, 0, 200, 50).fill(0x000000),\n *         new Graphics().drawRect(0, 0, 200, 50).fill(0x000000),\n *         new Graphics().drawRect(0, 0, 200, 50).fill(0x000000),\n *         new Graphics().drawRect(0, 0, 200, 50).fill(0x000000),\n *     ],\n * });\n */\n\nexport class ScrollBox extends Container\n{\n    protected background: Graphics;\n    protected borderMask: Graphics;\n    protected lastWidth: number;\n    protected lastHeight: number;\n    protected __width = 0;\n    protected __height = 0;\n    protected _dimensionChanged = false;\n\n    protected list: List;\n\n    protected _trackpad: Trackpad;\n    protected isDragging = 0;\n    protected interactiveStorage: {\n        item: Container;\n        eventMode: EventMode;\n    }[] = [];\n    protected visibleItems: Container[] = [];\n    protected pressedChild: Container;\n    protected ticker = Ticker.shared;\n    protected options: ScrollBoxOptions;\n    protected stopRenderHiddenItemsTimeout!: NodeJS.Timeout;\n    protected onMouseScrollBinding = this.onMouseScroll.bind(this);\n    protected dragStarTouchPoint: Point;\n    protected isOver = false;\n\n    /**\n     * @param options\n     * @param {number} options.background - background color of the ScrollBox.\n     * @param {number} options.width - width of the ScrollBox.\n     * @param {number} options.height - height of the ScrollBox.\n     * @param {number} options.radius - radius of the ScrollBox and its masks corners.\n     * @param {number} options.elementsMargin - margin between elements.\n     * @param {number} options.vertPadding - vertical padding of the ScrollBox.\n     * @param {number} options.horPadding - horizontal padding of the ScrollBox.\n     * @param {number} options.padding - padding of the ScrollBox (same horizontal and vertical).\n     * @param {boolean} options.disableDynamicRendering - disables dynamic rendering of the ScrollBox,\n     * so even elements the are not visible will be rendered. Be careful with this options as it can impact performance.\n     * @param {boolean} [options.globalScroll=true] - if true, the ScrollBox will scroll even if the mouse is not over it.\n     * @param {boolean} [options.shiftScroll=false] - if true, the ScrollBox will only scroll horizontally if the shift key\n     * is pressed, and the type is set to 'horizontal'.\n     */\n    constructor(options?: ScrollBoxOptions)\n    {\n        super();\n\n        if (options)\n        {\n            this.init(options);\n        }\n\n        this.ticker.add(this.update, this);\n    }\n\n    /**\n     * Initiates ScrollBox.\n     * @param options\n     * @param {number} options.background - background color of the ScrollBox.\n     * @param {number} options.width - width of the ScrollBox.\n     * @param {number} options.height - height of the ScrollBox.\n     * @param {number} options.radius - radius of the ScrollBox and its masks corners.\n     * @param {number} options.elementsMargin - margin between elements.\n     * @param {number} options.vertPadding - vertical padding of the ScrollBox.\n     * @param {number} options.horPadding - horizontal padding of the ScrollBox.\n     * @param {number} options.padding - padding of the ScrollBox (same horizontal and vertical).\n     * @param {boolean} options.disableDynamicRendering - disables dynamic rendering of the ScrollBox,\n     * so even elements the are not visible will be rendered. Be careful with this options as it can impact performance.\n     * @param {boolean} [options.globalScroll=true] - if true, the ScrollBox will scroll even if the mouse is not over it.\n     * @param {boolean} [options.shiftScroll=false] - if true, the ScrollBox will only scroll horizontally if the shift key\n     */\n    init(options: ScrollBoxOptions)\n    {\n        this.options = options;\n        this.setBackground(options.background);\n\n        this.__width = options.width | this.background.width;\n        this.__height = options.height | this.background.height;\n\n        if (!this.list)\n        {\n            this.list = new List();\n\n            super.addChild(this.list);\n        }\n\n        this.list.init({\n            type: options.type,\n            elementsMargin: options.elementsMargin,\n            padding: options.padding,\n            vertPadding: options.vertPadding,\n            horPadding: options.horPadding,\n            topPadding: options.topPadding,\n            bottomPadding: options.bottomPadding,\n            leftPadding: options.leftPadding,\n            rightPadding: options.rightPadding,\n        });\n\n        this.addItems(options.items);\n\n        if (this.hasBounds)\n        {\n            this.addMask();\n            this.makeScrollable();\n        }\n\n        this._trackpad.xAxis.value = 0;\n        this._trackpad.yAxis.value = 0;\n\n        this.options.globalScroll = options.globalScroll ?? true;\n        this.options.shiftScroll = options.shiftScroll ?? false;\n        this.resize();\n    }\n\n    protected get hasBounds(): boolean\n    {\n        return !!this.__width || !!this.__height;\n    }\n\n    /**\n     *  Adds array of items to a scrollable list.\n     * @param {Container[]} items - items to add.\n     */\n    addItems(items: Container[])\n    {\n        if (!items?.length) return;\n\n        items.forEach((item) => this.addItem(item));\n    }\n\n    /** Remove all items from a scrollable list. */\n    removeItems()\n    {\n        this.list.removeChildren();\n    }\n\n    /**\n     * Adds one or more items to a scrollable list.\n     * @param {Container} items - one or more items to add.\n     */\n    addItem<T extends Container[]>(...items: T): T[0]\n    {\n        if (items.length > 1)\n        {\n            items.forEach((item) => this.addItem(item));\n        }\n        else\n        {\n            const child = items[0];\n\n            if (!child.width || !child.height)\n            {\n                console.error('ScrollBox item should have size');\n            }\n\n            child.eventMode = 'static';\n\n            this.list.addChild(child);\n\n            if (!this.options.disableDynamicRendering)\n            {\n                child.renderable = this.isItemVisible(child);\n            }\n        }\n\n        this.resize();\n\n        return items[0];\n    }\n\n    /**\n     * Removes an item from a scrollable list.\n     * @param {number} itemID - id of the item to remove.\n     */\n    removeItem(itemID: number)\n    {\n        this.list.removeItem(itemID);\n\n        this.resize();\n    }\n\n    /**\n     * Checks if the item is visible or scrolled out of the visible part of the view.* Adds an item to a scrollable list.\n     * @param {Container} item - item to check.\n     */\n    isItemVisible(item: Container): boolean\n    {\n        const isVertical = this.options.type === 'vertical' || !this.options.type;\n        let isVisible = false;\n        const list = this.list;\n\n        if (isVertical)\n        {\n            const posY = item.y + list.y;\n\n            if (\n                posY + item.height + this.list.bottomPadding >= 0\n                && posY - this.list.topPadding <= this.options.height\n            )\n            {\n                isVisible = true;\n            }\n        }\n        else\n        {\n            const posX = item.x + list.x;\n\n            if (posX + item.width >= 0 && posX <= this.options.width)\n            {\n                isVisible = true;\n            }\n        }\n\n        return isVisible;\n    }\n\n    /**\n     * Returns all inner items in a list.\n     * @returns {Array<Container> | Array} - list of items.\n     */\n    get items(): Container[] | []\n    {\n        return this.list?.children ?? [];\n    }\n\n    /**\n     * Set ScrollBox background.\n     * @param {number | string} background - background color or texture.\n     */\n    setBackground(background?: ColorSource)\n    {\n        if (this.background)\n        {\n            this.removeChild(this.background);\n        }\n\n        this.options.background = background;\n\n        this.background = new Graphics();\n\n        this.addChildAt(this.background, 0);\n\n        this.resize();\n    }\n\n    protected addMask()\n    {\n        if (!this.borderMask)\n        {\n            this.borderMask = new Graphics();\n            super.addChild(this.borderMask);\n            this.mask = this.borderMask;\n        }\n\n        this.resize();\n    }\n\n    protected makeScrollable()\n    {\n        if (!this._trackpad)\n        {\n            this._trackpad = new Trackpad({\n                disableEasing: this.options.disableEasing,\n            });\n        }\n\n        this.on('pointerdown', (e: FederatedPointerEvent) =>\n        {\n            this.renderAllItems();\n\n            this.isDragging = 1;\n            this.dragStarTouchPoint = this.worldTransform.applyInverse(e.global);\n\n            this._trackpad.pointerDown(this.dragStarTouchPoint);\n\n            const listTouchPoint = this.list.worldTransform.applyInverse(e.global);\n\n            this.visibleItems.forEach((item) =>\n            {\n                if (item.x < listTouchPoint.x\n                    && item.x + item.width > listTouchPoint.x\n                    && item.y < listTouchPoint.y\n                    && item.y + item.height > listTouchPoint.y)\n                {\n                    this.pressedChild = item;\n                }\n            });\n        });\n\n        this.on('pointerup', () =>\n        {\n            this.isDragging = 0;\n            this._trackpad.pointerUp();\n            this.restoreItemsInteractivity();\n\n            this.pressedChild = null;\n\n            this.stopRenderHiddenItems();\n        });\n\n        this.on('pointerover', () =>\n        {\n            this.isOver = true;\n        });\n\n        this.on('pointerout', () =>\n        {\n            this.isOver = false;\n        });\n\n        this.on('pointerupoutside', () =>\n        {\n            this.isDragging = 0;\n            this._trackpad.pointerUp();\n            this.restoreItemsInteractivity();\n\n            this.pressedChild = null;\n\n            this.stopRenderHiddenItems();\n        });\n\n        this.on('globalpointermove', (e: FederatedPointerEvent) =>\n        {\n            if (!this.isDragging) return;\n\n            const touchPoint = this.worldTransform.applyInverse(e.global);\n\n            if (this.dragStarTouchPoint)\n            {\n                const dragTrashHold = this.options.dragTrashHold ?? 10;\n\n                if (this.options.type === 'horizontal')\n                {\n                    const xDist = touchPoint.x - this.dragStarTouchPoint.x;\n\n                    if (Math.abs(xDist) > dragTrashHold)\n                    {\n                        this.isDragging = 2;\n                    }\n                }\n                else\n                {\n                    const yDist = touchPoint.y - this.dragStarTouchPoint.y;\n\n                    if (Math.abs(yDist) > dragTrashHold)\n                    {\n                        this.isDragging = 2;\n                    }\n                }\n            }\n\n            if (this.dragStarTouchPoint && this.isDragging !== 2) return;\n\n            this._trackpad.pointerMove(touchPoint);\n\n            if (this.pressedChild)\n            {\n                this.revertClick(this.pressedChild);\n\n                this.pressedChild = null;\n            }\n        });\n\n        document.addEventListener('wheel', this.onMouseScrollBinding, true);\n    }\n\n    protected setInteractive(interactive: boolean)\n    {\n        this.eventMode = interactive ? 'static' : 'auto';\n    }\n\n    protected get listHeight(): number\n    {\n        return this.list.height + this.list.topPadding + this.list.bottomPadding;\n    }\n\n    protected get listWidth(): number\n    {\n        return this.list.width + this.list.leftPadding + this.list.rightPadding;\n    }\n\n    /**\n     * Controls item positions and visibility.\n     * @param force\n     */\n    resize(force = false): void\n    {\n        if (!this.hasBounds) return;\n\n        this.renderAllItems();\n\n        if (\n            this.borderMask\n            && (force\n                || this._dimensionChanged\n                || this.lastWidth !== this.listWidth\n                || this.lastHeight !== this.listHeight)\n        )\n        {\n            if (!this.options.width)\n            {\n                this.__width += this.listWidth;\n            }\n\n            if (!this.options.height)\n            {\n                this.__height += this.listHeight;\n            }\n\n            this.borderMask\n                .clear()\n                .roundRect(\n                    0,\n                    0,\n                    this.__width,\n                    this.__height,\n                    this.options.radius | 0,\n                )\n                .fill(0xff00ff)\n                .stroke(0x0);\n            this.borderMask.eventMode = 'none';\n\n            const color = this.options.background;\n\n            this.background\n                .clear()\n                .roundRect(\n                    0,\n                    0,\n                    this.__width,\n                    this.__height,\n                    this.options.radius | 0,\n                )\n                .fill({\n                    color: color ?? 0x000000,\n                    alpha: color ? 1 : 0.0000001, // if color is not set, set alpha to 0 to be able to drag by click on bg\n                });\n\n            if (this.options.type === 'horizontal')\n            {\n                this.setInteractive(this.listWidth > this.__width);\n            }\n            else\n            {\n                this.setInteractive(this.listHeight > this.__height);\n            }\n\n            this.lastWidth = this.listWidth;\n            this.lastHeight = this.listHeight;\n        }\n\n        if (this._trackpad)\n        {\n            const maxWidth\n                = this.borderMask.width\n                - this.list.width\n                - this.list.leftPadding\n                - this.list.rightPadding;\n\n            const maxHeight\n                = this.borderMask.height\n                - this.list.height\n                - this.list.topPadding\n                - this.list.bottomPadding;\n\n            if (this.options.type === 'vertical')\n            {\n                this._trackpad.yAxis.max = -Math.abs(maxHeight);\n            }\n            else if (this.options.type === 'horizontal')\n            {\n                this._trackpad.xAxis.max = -Math.abs(maxWidth);\n            }\n            else\n            {\n                this._trackpad.yAxis.max = -Math.abs(maxHeight);\n                this._trackpad.xAxis.max = -Math.abs(maxWidth);\n            }\n        }\n\n        if (this._dimensionChanged)\n        {\n            this.list.arrangeChildren();\n\n            // Since the scrolling adjustment can happen due to the resize,\n            // we shouldn't update the visible items immediately.\n            this.stopRenderHiddenItems();\n\n            this._dimensionChanged = false;\n        }\n        else this.updateVisibleItems();\n    }\n\n    protected onMouseScroll(event: WheelEvent): void\n    {\n        if (!this.isOver && !this.options.globalScroll) return;\n\n        this.renderAllItems();\n\n        const scrollOnX = this.options.shiftScroll\n            ? (typeof event.deltaX !== 'undefined' || typeof event.deltaY !== 'undefined')\n            : typeof event.deltaX !== 'undefined';\n\n        if (this.options.type === 'horizontal' && scrollOnX)\n        {\n            const delta = this.options.shiftScroll ? event.deltaX : event.deltaY;\n            const targetPos = this.list.x - delta;\n\n            if (this.listWidth < this.__width)\n            {\n                this._trackpad.xAxis.value = 0;\n            }\n            else\n            {\n                const min = this.__width - this.listWidth;\n                const max = 0;\n\n                this._trackpad.xAxis.value = Math.min(max, Math.max(min, targetPos));\n            }\n        }\n        else if (typeof event.deltaY !== 'undefined')\n        {\n            const targetPos = this.list.y - event.deltaY;\n\n            if (this.listHeight < this.__height)\n            {\n                this._trackpad.yAxis.value = 0;\n            }\n            else\n            {\n                const min = this.__height - this.listHeight;\n                const max = 0;\n\n                this._trackpad.yAxis.value = Math.min(max, Math.max(min, targetPos));\n            }\n        }\n\n        this.stopRenderHiddenItems();\n    }\n\n    /** Makes it scroll down to the last element. */\n    scrollBottom()\n    {\n        if (!this.interactive)\n        {\n            this.scrollTop();\n        }\n        else\n        {\n            this.scrollTo(this.list.children.length - 1);\n        }\n    }\n\n    /** Makes it scroll up to the first element. */\n    scrollTop()\n    {\n        this.renderAllItems();\n\n        this._trackpad.xAxis.value = 0;\n        this._trackpad.yAxis.value = 0;\n\n        this.stopRenderHiddenItems();\n    }\n\n    protected renderAllItems()\n    {\n        clearTimeout(this.stopRenderHiddenItemsTimeout);\n        this.stopRenderHiddenItemsTimeout = null;\n\n        if (this.options.disableDynamicRendering)\n        {\n            return;\n        }\n\n        this.items.forEach((child) =>\n        {\n            child.renderable = true;\n        });\n    }\n\n    protected stopRenderHiddenItems()\n    {\n        if (this.options.disableDynamicRendering)\n        {\n            return;\n        }\n\n        if (this.stopRenderHiddenItemsTimeout)\n        {\n            clearTimeout(this.stopRenderHiddenItemsTimeout);\n            this.stopRenderHiddenItemsTimeout = null;\n        }\n\n        this.stopRenderHiddenItemsTimeout = setTimeout(() => this.updateVisibleItems(), 2000);\n    }\n\n    protected updateVisibleItems()\n    {\n        this.visibleItems.length = 0;\n\n        this.items.forEach((child) =>\n        {\n            child.renderable = this.isItemVisible(child);\n            this.visibleItems.push(child);\n        });\n    }\n\n    /**\n     * Scrolls to the element with the given ID.\n     * @param elementID\n     */\n    scrollTo(elementID: number)\n    {\n        if (!this.interactive)\n        {\n            return;\n        }\n\n        const target = this.list.children[elementID];\n\n        if (!target)\n        {\n            return;\n        }\n\n        this.renderAllItems();\n\n        this._trackpad.xAxis.value\n            = this.options.type === 'horizontal'\n                ? this.__width\n                  - target.x\n                  - target.width\n                  - this.list.rightPadding\n                : 0;\n\n        this._trackpad.yAxis.value\n            = !this.options.type || this.options.type === 'vertical'\n                ? this.__height\n                  - target.y\n                  - target.height\n                  - this.list.bottomPadding\n                : 0;\n\n        this.stopRenderHiddenItems();\n    }\n\n    /** Gets component height. */\n    override get height(): number\n    {\n        return this.__height;\n    }\n\n    override set height(value: number)\n    {\n        this.__height = value;\n        this._dimensionChanged = true;\n        this.resize();\n        this.scrollTop();\n    }\n\n    /** Gets component width. */\n    override get width(): number\n    {\n        return this.__width;\n    }\n\n    override set width(value: number)\n    {\n        this.__width = value;\n        this._dimensionChanged = true;\n        this.resize();\n        this.scrollTop();\n    }\n\n    protected update()\n    {\n        if (!this.list) return;\n\n        this._trackpad.update();\n\n        const type = this.options.type === 'horizontal' ? 'x' : 'y';\n\n        if (this.list[type] !== this._trackpad[type])\n        {\n            this.list[type] = this._trackpad[type];\n        }\n    }\n\n    /**\n     * Destroys the component.\n     * @param {boolean | DestroyOptions} [options] - Options parameter.\n     * A boolean will act as if all options have been set to that value\n     */\n    override destroy(options?: DestroyOptions | boolean)\n    {\n        this.ticker.remove(this.update, this);\n\n        document.removeEventListener('wheel', this.onMouseScrollBinding, true);\n\n        this.background.destroy();\n        this.list.destroy();\n\n        super.destroy(options);\n    }\n\n    protected restoreItemsInteractivity()\n    {\n        this.interactiveStorage.forEach((element) =>\n        {\n            element.item.eventMode = element.eventMode;\n        });\n\n        this.interactiveStorage.length = 0;\n    }\n\n    protected revertClick(item: Container)\n    {\n        if (item.eventMode !== 'auto')\n        {\n            isMobile.any\n                ? item.emit('pointerupoutside', null)\n                : item.emit('mouseupoutside', null);\n\n            this.interactiveStorage.push({\n                item,\n                eventMode: item.eventMode,\n            });\n\n            item.eventMode = 'auto';\n        }\n\n        // need to disable click for all children too\n        if (item instanceof Container && item.children)\n        {\n            item.children.forEach((child) => this.revertClick(child));\n        }\n    }\n}\n"],"names":[],"mappings":"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"}