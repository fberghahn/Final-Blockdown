export interface SlidingNumberOptions {
    constrain?: boolean;
    maxSpeed?: number;
    ease?: ConstrainEase;
}
export interface ConstrainEase {
    done: boolean;
    to: number;
    start(speed: number, pos: number, to: number): void;
    update(): number;
}
export declare class SlidingNumber {
    position: number;
    constrain: boolean;
    min: number;
    max: number;
    maxSpeed: number;
    protected _ease: ConstrainEase;
    protected _offset: number;
    protected _prev: number;
    protected _speed: number;
    protected _hasStopped: boolean;
    protected _targetSpeed: number;
    protected _speedChecker: number;
    protected _grab: number;
    protected _activeEase: ConstrainEase;
    constructor(options?: SlidingNumberOptions);
    set value(n: number);
    get value(): number;
    grab(offset: number): void;
    hold(newPosition: number): void;
    slide(instant?: boolean): void;
    get moveAmount(): number;
    protected _updateDefault(): void;
    protected _updateConstrain(instant?: boolean): void;
}
//# sourceMappingURL=SlidingNumber.d.ts.map