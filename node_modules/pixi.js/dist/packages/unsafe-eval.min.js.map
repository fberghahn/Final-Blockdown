{"version":3,"file":"unsafe-eval.min.js","sources":["../../src/unsafe-eval/shader/generateShaderSyncPolyfill.ts","../../src/unsafe-eval/ubo/uboSyncFunctions.ts","../../src/unsafe-eval/ubo/generateUboSyncPolyfill.ts","../../src/unsafe-eval/uniforms/uniformSyncFunctions.ts","../../src/unsafe-eval/uniforms/generateUniformsSyncPolyfill.ts","../../src/unsafe-eval/init.ts"],"sourcesContent":["import { BufferResource } from '../../rendering/renderers/shared/buffer/BufferResource';\nimport { UniformGroup } from '../../rendering/renderers/shared/shader/UniformGroup';\nimport { TextureSource } from '../../rendering/renderers/shared/texture/sources/TextureSource';\nimport { TextureStyle } from '../../rendering/renderers/shared/texture/TextureStyle';\n\nimport type { ShaderSyncData, ShaderSyncFunction } from '../../rendering/renderers/gl/shader/GlShaderSystem';\nimport type { WebGLRenderer } from '../../rendering/renderers/gl/WebGLRenderer';\nimport type { Shader } from '../../rendering/renderers/shared/shader/Shader';\n\nexport function generateShaderSyncPolyfill(): ShaderSyncFunction\n{\n    return syncShader;\n}\n\nfunction syncShader(renderer: WebGLRenderer, shader: Shader, syncData: ShaderSyncData): void\n{\n    const gl = renderer.gl;\n    const shaderSystem = renderer.shader;\n    const programData = shaderSystem._getProgramData(shader.glProgram);\n\n    // loop through the groups and sync everything...\n    for (const i in shader.groups)\n    {\n        const bindGroup = shader.groups[i];\n\n        for (const j in bindGroup.resources)\n        {\n            const resource = bindGroup.resources[j];\n\n            if (resource instanceof UniformGroup)\n            {\n                if (resource.ubo)\n                {\n                    shaderSystem.bindUniformBlock(\n                        resource,\n                        shader._uniformBindMap[i as unknown as number][j as unknown as number],\n                        syncData.blockIndex++\n                    );\n                }\n                else\n                {\n                    shaderSystem.updateUniformGroup(resource);\n                }\n            }\n            else if (resource instanceof BufferResource)\n            {\n                shaderSystem.bindUniformBlock(\n                    resource,\n                    shader._uniformBindMap[i as unknown as number][j as unknown as number],\n                    syncData.blockIndex++\n                );\n            }\n            else if (resource instanceof TextureSource)\n            {\n                // TODO really we should not be binding the sampler here too\n                renderer.texture.bind(resource, syncData.textureCount);\n\n                const uniformName = shader._uniformBindMap[i as unknown as number][j as unknown as number];\n\n                const uniformData = programData.uniformData[uniformName];\n\n                if (uniformData)\n                {\n                    if (uniformData.value !== syncData.textureCount)\n                    {\n                        gl.uniform1i(uniformData.location, syncData.textureCount);\n                    }\n\n                    syncData.textureCount++;\n                }\n            }\n            else if (resource instanceof TextureStyle)\n            {\n                // TODO not doing anything here works is assuming that textures are bound with the style they own.\n                // this.renderer.texture.bindSampler(resource, syncData.textureCount);\n            }\n        }\n    }\n}\n","/**\n * This file is auto generated by scripts/utils/autoGenerateUnsafeEvalFunctions.ts\n * Do not edit manually - or you will be sad.\n */\n\nimport type { UNIFORM_TYPES } from '../../rendering/renderers/shared/shader/types';\n\nexport type UboUploadFunction = (name: string, data: Float32Array, offset: number, uv: any, v: any) => void;\nexport const uboParserFunctions: UboUploadFunction[] = [\n    (name: string, data: Float32Array, offset: number, uv: any, _v: any): void =>\n    {\n        const matrix = uv[name].toArray(true);\n\n        data[offset] = matrix[0];\n        data[offset + 1] = matrix[1];\n        data[offset + 2] = matrix[2];\n        data[offset + 4] = matrix[3];\n        data[offset + 5] = matrix[4];\n        data[offset + 6] = matrix[5];\n        data[offset + 8] = matrix[6];\n        data[offset + 9] = matrix[7];\n        data[offset + 10] = matrix[8];\n    },\n    (name: string, data: Float32Array, offset: number, uv: any, v: any): void =>\n    {\n        v = uv[name];\n        data[offset] = v.x;\n        data[offset + 1] = v.y;\n        data[offset + 2] = v.width;\n        data[offset + 3] = v.height;\n    },\n    (name: string, data: Float32Array, offset: number, uv: any, v: any): void =>\n    {\n        v = uv[name];\n        data[offset] = v.x;\n        data[offset + 1] = v.y;\n    },\n    (name: string, data: Float32Array, offset: number, uv: any, v: any): void =>\n    {\n        v = uv[name];\n        data[offset] = v.red;\n        data[offset + 1] = v.green;\n        data[offset + 2] = v.blue;\n        data[offset + 3] = v.alpha;\n    },\n    (name: string, data: Float32Array, offset: number, uv: any, v: any): void =>\n    {\n        v = uv[name];\n        data[offset] = v.red;\n        data[offset + 1] = v.green;\n        data[offset + 2] = v.blue;\n    },\n];\nexport const uboSingleFunctionsWGSL: Record<UNIFORM_TYPES | string, UboUploadFunction> = {\n    f32: (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        data[offset] = v;\n    },\n    i32: (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        data[offset] = v;\n    },\n    'vec2<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        data[offset] = v[0];\n        data[offset + 1] = v[1];\n    },\n    'vec3<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        data[offset] = v[0];\n        data[offset + 1] = v[1];\n        data[offset + 2] = v[2];\n    },\n    'vec4<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        data[offset] = v[0];\n        data[offset + 1] = v[1];\n        data[offset + 2] = v[2];\n        data[offset + 3] = v[3];\n    },\n    'mat2x2<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        data[offset] = v[0];\n        data[offset + 1] = v[1];\n        data[offset + 2] = v[2];\n        data[offset + 3] = v[3];\n    },\n    'mat3x3<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        data[offset] = v[0];\n        data[offset + 1] = v[1];\n        data[offset + 2] = v[2];\n        data[offset + 4] = v[3];\n        data[offset + 5] = v[4];\n        data[offset + 6] = v[5];\n        data[offset + 8] = v[6];\n        data[offset + 9] = v[7];\n        data[offset + 10] = v[8];\n    },\n    'mat4x4<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        for (let i = 0; i < 16; i++)\n        {\n            data[offset + i] = v[i];\n        }\n    },\n    'mat3x2<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        for (let i = 0; i < 6; i++)\n        {\n            data[offset + (((i / 3) | 0) * 4) + (i % 3)] = v[i];\n        }\n    },\n    'mat4x2<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        for (let i = 0; i < 8; i++)\n        {\n            data[offset + (((i / 4) | 0) * 4) + (i % 4)] = v[i];\n        }\n    },\n    'mat2x3<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        for (let i = 0; i < 6; i++)\n        {\n            data[offset + (((i / 2) | 0) * 4) + (i % 2)] = v[i];\n        }\n    },\n    'mat4x3<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        for (let i = 0; i < 12; i++)\n        {\n            data[offset + (((i / 4) | 0) * 4) + (i % 4)] = v[i];\n        }\n    },\n    'mat2x4<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        for (let i = 0; i < 8; i++)\n        {\n            data[offset + (((i / 2) | 0) * 4) + (i % 2)] = v[i];\n        }\n    },\n    'mat3x4<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        for (let i = 0; i < 12; i++)\n        {\n            data[offset + (((i / 3) | 0) * 4) + (i % 3)] = v[i];\n        }\n    },\n};\nexport const uboSingleFunctionsSTD40: Record<UNIFORM_TYPES | string, UboUploadFunction> = {\n    f32: (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        data[offset] = v;\n    },\n    i32: (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        data[offset] = v;\n    },\n    'vec2<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        data[offset] = v[0];\n        data[offset + 1] = v[1];\n    },\n    'vec3<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        data[offset] = v[0];\n        data[offset + 1] = v[1];\n        data[offset + 2] = v[2];\n    },\n    'vec4<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        data[offset] = v[0];\n        data[offset + 1] = v[1];\n        data[offset + 2] = v[2];\n        data[offset + 3] = v[3];\n    },\n    'mat2x2<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        data[offset] = v[0];\n        data[offset + 1] = v[1];\n        data[offset + 4] = v[2];\n        data[offset + 5] = v[3];\n    },\n    'mat3x3<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        data[offset] = v[0];\n        data[offset + 1] = v[1];\n        data[offset + 2] = v[2];\n        data[offset + 4] = v[3];\n        data[offset + 5] = v[4];\n        data[offset + 6] = v[5];\n        data[offset + 8] = v[6];\n        data[offset + 9] = v[7];\n        data[offset + 10] = v[8];\n    },\n    'mat4x4<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        for (let i = 0; i < 16; i++)\n        {\n            data[offset + i] = v[i];\n        }\n    },\n    'mat3x2<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        for (let i = 0; i < 6; i++)\n        {\n            data[offset + (((i / 3) | 0) * 4) + (i % 3)] = v[i];\n        }\n    },\n    'mat4x2<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        for (let i = 0; i < 8; i++)\n        {\n            data[offset + (((i / 4) | 0) * 4) + (i % 4)] = v[i];\n        }\n    },\n    'mat2x3<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        for (let i = 0; i < 6; i++)\n        {\n            data[offset + (((i / 2) | 0) * 4) + (i % 2)] = v[i];\n        }\n    },\n    'mat4x3<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        for (let i = 0; i < 12; i++)\n        {\n            data[offset + (((i / 4) | 0) * 4) + (i % 4)] = v[i];\n        }\n    },\n    'mat2x4<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        for (let i = 0; i < 8; i++)\n        {\n            data[offset + (((i / 2) | 0) * 4) + (i % 2)] = v[i];\n        }\n    },\n    'mat3x4<f32>': (_name: string, data: Float32Array, offset: number, _uv: any, v: any): void =>\n    {\n        for (let i = 0; i < 12; i++)\n        {\n            data[offset + (((i / 3) | 0) * 4) + (i % 3)] = v[i];\n        }\n    },\n};\n","import { WGSL_TO_STD40_SIZE } from '../../rendering/renderers/gl/shader/utils/createUboElementsSTD40';\nimport { WGSL_ALIGN_SIZE_DATA } from '../../rendering/renderers/gpu/shader/utils/createUboElementsWGSL';\nimport { uniformParsers } from '../../rendering/renderers/shared/shader/utils/uniformParsers';\nimport { uboParserFunctions, uboSingleFunctionsSTD40, uboSingleFunctionsWGSL } from './uboSyncFunctions';\n\nimport type { UboElement, UniformsSyncCallback } from '../../rendering/renderers/shared/shader/types';\nimport type { UniformGroup } from '../../rendering/renderers/shared/shader/UniformGroup';\nimport type { UboUploadFunction } from './uboSyncFunctions';\n\nexport function generateUboSyncPolyfillSTD40(uboElements: UboElement[]): UniformsSyncCallback\n{\n    return generateUboSyncPolyfill(\n        uboElements,\n        uboSingleFunctionsSTD40,\n        (uboElement: UboElement) =>\n        {\n            const rowSize = Math.max(WGSL_TO_STD40_SIZE[uboElement.data.type] / 16, 1);\n            const elementSize = (uboElement.data.value as Array<number>).length / uboElement.data.size;// size / rowSize;\n            const remainder = (4 - (elementSize % 4)) % 4;\n\n            return (_name: string, data: Float32Array, offset: number, _uv: any, v: any) =>\n            {\n                let t = 0;\n\n                for (let i = 0; i < (uboElement.data.size * rowSize); i++)\n                {\n                    for (let j = 0; j < elementSize; j++)\n                    {\n                        data[offset++] = v[t++];\n                    }\n\n                    offset += remainder;\n                }\n            };\n        }\n\n    );\n}\n\nexport function generateUboSyncPolyfillWGSL(uboElements: UboElement[]): UniformsSyncCallback\n{\n    return generateUboSyncPolyfill(\n        uboElements,\n        uboSingleFunctionsWGSL,\n        (uboElement: UboElement) =>\n        {\n            const { size, align } = WGSL_ALIGN_SIZE_DATA[uboElement.data.type];\n\n            const remainder = (size - align) / 4;\n\n            return (_name: string, data: Float32Array, offset: number, _uv: any, v: any) =>\n            {\n                let t = 0;\n\n                for (let i = 0; i < uboElement.data.size * (size / 4); i++)\n                {\n                    for (let j = 0; j < (size / 4); j++)\n                    {\n                        data[offset++] = v[t++];\n                    }\n                    offset += remainder;\n                }\n            };\n        }\n    );\n}\n\nfunction generateUboSyncPolyfill(\n    uboElements: UboElement[],\n    uboFunctions: Record<string, UboUploadFunction>,\n    arrayUploadFunction: (uboElement: UboElement) => UboUploadFunction\n): UniformsSyncCallback\n{\n    // loop through all the uniforms..\n    const functionMap: Record<string, {offset: number, func: UboUploadFunction}> = {};\n\n    for (const i in uboElements)\n    {\n        const uboElement = uboElements[i];\n        const uniform = uboElement.data;\n\n        let parsed = false;\n\n        functionMap[uniform.name] = {\n            offset: uboElement.offset / 4,\n            func: null\n        };\n\n        for (let j = 0; j < uniformParsers.length; j++)\n        {\n            const parser = uniformParsers[j];\n\n            if (uniform.type === parser.type && parser.test(uniform))\n            {\n                functionMap[uniform.name].func = uboParserFunctions[j];\n\n                parsed = true;\n\n                break;\n            }\n        }\n\n        // if not parsed...\n\n        if (!parsed)\n        {\n            if (uniform.size === 1)\n            {\n                functionMap[uniform.name].func = uboFunctions[uniform.type];\n            }\n            else\n            {\n                functionMap[uniform.name].func = arrayUploadFunction(uboElement);\n            }\n        }\n    }\n\n    return (\n        uniforms: UniformGroup,\n        data: Float32Array,\n        offset: number\n    ) =>\n    {\n        for (const i in functionMap)\n        {\n            functionMap[i].func(i, data, offset + functionMap[i].offset, uniforms, uniforms[i as keyof typeof uniforms]);\n        }\n    };\n}\n","/**\n * This file is auto generated by scripts/utils/autoGenerateUnsafeEvalFunctions.ts\n * Do not edit manually - or you will be sad.\n */\n\nimport type { UNIFORM_TYPES } from '../../rendering/renderers/shared/shader/types';\n\nexport type UniformUploadFunction = (name: string, cu: any, cv: any, v: any, ud: any, uv: any, gl: any) => void;\n\nexport const uniformSingleParserFunctions: Record<UNIFORM_TYPES | string, UniformUploadFunction> = {\n    f32(name: string, cu: any, cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        if (cv !== v)\n        {\n            cu.value = v;\n            gl.uniform1f(ud[name].location, v);\n        }\n    },\n    'vec2<f32>'(name: string, _cu: any, cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        if (cv[0] !== v[0] || cv[1] !== v[1])\n        {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2f(ud[name].location, v[0], v[1]);\n        }\n    },\n    'vec3<f32>'(name: string, _cu: any, cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2])\n        {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3f(ud[name].location, v[0], v[1], v[2]);\n        }\n    },\n    'vec4<f32>'(name: string, _cu: any, cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3])\n        {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4f(ud[name].location, v[0], v[1], v[2], v[3]);\n        }\n    },\n    i32(name: string, cu: any, cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        if (cv !== v)\n        {\n            cu.value = v;\n            gl.uniform1i(ud[name].location, v);\n        }\n    },\n    'vec2<i32>'(name: string, _cu: any, cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        if (cv[0] !== v[0] || cv[1] !== v[1])\n        {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2i(ud[name].location, v[0], v[1]);\n        }\n    },\n    'vec3<i32>'(name: string, _cu: any, cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2])\n        {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3i(ud[name].location, v[0], v[1], v[2]);\n        }\n    },\n    'vec4<i32>'(name: string, _cu: any, cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3])\n        {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4i(ud[name].location, v[0], v[1], v[2], v[3]);\n        }\n    },\n    u32(name: string, cu: any, cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        if (cv !== v)\n        {\n            cu.value = v;\n            gl.uniform1ui(ud[name].location, v);\n        }\n    },\n    'vec2<u32>'(name: string, _cu: any, cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        if (cv[0] !== v[0] || cv[1] !== v[1])\n        {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2ui(ud[name].location, v[0], v[1]);\n        }\n    },\n    'vec3<u32>'(name: string, _cu: any, cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2])\n        {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3ui(ud[name].location, v[0], v[1], v[2]);\n        }\n    },\n    'vec4<u32>'(name: string, _cu: any, cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3])\n        {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4ui(ud[name].location, v[0], v[1], v[2], v[3]);\n        }\n    },\n    bool(name: string, cu: any, cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        if (cv !== v)\n        {\n            cu.value = v;\n            gl.uniform1i(ud[name].location, v);\n        }\n    },\n    'vec2<bool>'(name: string, _cu: any, cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        if (cv[0] !== v[0] || cv[1] !== v[1])\n        {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2i(ud[name].location, v[0], v[1]);\n        }\n    },\n    'vec3<bool>'(name: string, _cu: any, cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2])\n        {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3i(ud[name].location, v[0], v[1], v[2]);\n        }\n    },\n    'vec4<bool>'(name: string, _cu: any, cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3])\n        {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4i(ud[name].location, v[0], v[1], v[2], v[3]);\n        }\n    },\n    'mat2x2<f32>'(name: string, _cu: any, _cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        gl.uniformMatrix2fv(ud[name].location, false, v);\n    },\n    'mat3x3<f32>'(name: string, _cu: any, _cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        gl.uniformMatrix3fv(ud[name].location, false, v);\n    },\n    'mat4x4<f32>'(name: string, _cu: any, _cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        gl.uniformMatrix4fv(ud[name].location, false, v);\n    },\n};\n\nexport const uniformArrayParserFunctions: Record<UNIFORM_TYPES | string, UniformUploadFunction> = {\n    f32(name: string, _cu: any, _cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        gl.uniform1fv(ud[name].location, v);\n    },\n    'vec2<f32>'(name: string, _cu: any, _cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        gl.uniform2fv(ud[name].location, v);\n    },\n    'vec3<f32>'(name: string, _cu: any, _cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        gl.uniform3fv(ud[name].location, v);\n    },\n    'vec4<f32>'(name: string, _cu: any, _cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        gl.uniform4fv(ud[name].location, v);\n    },\n    'mat2x2<f32>'(name: string, _cu: any, _cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        gl.uniformMatrix2fv(ud[name].location, false, v);\n    },\n    'mat3x3<f32>'(name: string, _cu: any, _cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        gl.uniformMatrix3fv(ud[name].location, false, v);\n    },\n    'mat4x4<f32>'(name: string, _cu: any, _cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        gl.uniformMatrix4fv(ud[name].location, false, v);\n    },\n    i32(name: string, _cu: any, _cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        gl.uniform1iv(ud[name].location, v);\n    },\n    'vec2<i32>'(name: string, _cu: any, _cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        gl.uniform2iv(ud[name].location, v);\n    },\n    'vec3<i32>'(name: string, _cu: any, _cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        gl.uniform3iv(ud[name].location, v);\n    },\n    'vec4<i32>'(name: string, _cu: any, _cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        gl.uniform4iv(ud[name].location, v);\n    },\n    u32(name: string, _cu: any, _cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        gl.uniform1iv(ud[name].location, v);\n    },\n    'vec2<u32>'(name: string, _cu: any, _cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        gl.uniform2iv(ud[name].location, v);\n    },\n    'vec3<u32>'(name: string, _cu: any, _cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        gl.uniform3iv(ud[name].location, v);\n    },\n    'vec4<u32>'(name: string, _cu: any, _cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        gl.uniform4iv(ud[name].location, v);\n    },\n    bool(name: string, _cu: any, _cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        gl.uniform1iv(ud[name].location, v);\n    },\n    'vec2<bool>'(name: string, _cu: any, _cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        gl.uniform2iv(ud[name].location, v);\n    },\n    'vec3<bool>'(name: string, _cu: any, _cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        gl.uniform3iv(ud[name].location, v);\n    },\n    'vec4<bool>'(name: string, _cu: any, _cv: any, v: any, ud: any, _uv: any, gl: any): void\n    {\n        gl.uniform4iv(ud[name].location, v);\n    },\n};\n\nexport const uniformParserFunctions: UniformUploadFunction[] = [\n    (name: string, _cu: any, _cv: any, _v: any, ud: any, uv: any, gl: any): void =>\n    {\n        gl.uniformMatrix3fv(ud[name].location, false, uv[name].toArray(true));\n    },\n    (name: string, _cu: any, cv: any, v: any, ud: any, uv: any, gl: any): void =>\n    {\n        cv = ud[name].value;\n        v = uv[name];\n        if (cv[0] !== v.x || cv[1] !== v.y || cv[2] !== v.width || cv[3] !== v.height)\n        {\n            cv[0] = v.x;\n            cv[1] = v.y;\n            cv[2] = v.width;\n            cv[3] = v.height;\n            gl.uniform4f(ud[name].location, v.x, v.y, v.width, v.height);\n        }\n    },\n    (name: string, _cu: any, cv: any, v: any, ud: any, uv: any, gl: any): void =>\n    {\n        cv = ud[name].value;\n        v = uv[name];\n        if (cv[0] !== v.x || cv[1] !== v.y)\n        {\n            cv[0] = v.x;\n            cv[1] = v.y;\n            gl.uniform2f(ud[name].location, v.x, v.y);\n        }\n    },\n    (name: string, _cu: any, cv: any, v: any, ud: any, uv: any, gl: any): void =>\n    {\n        cv = ud[name].value;\n        v = uv[name];\n        if (cv[0] !== v.red || cv[1] !== v.green || cv[2] !== v.blue || cv[3] !== v.alpha)\n        {\n            cv[0] = v.red;\n            cv[1] = v.green;\n            cv[2] = v.blue;\n            cv[3] = v.alpha;\n            gl.uniform4f(ud[name].location, v.red, v.green, v.blue, v.alpha);\n        }\n    },\n    (name: string, _cu: any, cv: any, v: any, ud: any, uv: any, gl: any): void =>\n    {\n        cv = ud[name].value;\n        v = uv[name];\n        if (cv[0] !== v.red || cv[1] !== v.green || cv[2] !== v.blue)\n        {\n            cv[0] = v.red;\n            cv[1] = v.green;\n            cv[2] = v.blue;\n            gl.uniform3f(ud[name].location, v.red, v.green, v.blue);\n        }\n    },\n];\n","import { uniformParsers } from '../../rendering/renderers/shared/shader/utils/uniformParsers';\nimport { uniformArrayParserFunctions, uniformParserFunctions, uniformSingleParserFunctions } from './uniformSyncFunctions';\n\nimport type { GlUniformData } from '../../rendering/renderers/gl/shader/GlProgram';\nimport type { WebGLRenderer } from '../../rendering/renderers/gl/WebGLRenderer';\nimport type { UniformsSyncCallback } from '../../rendering/renderers/shared/shader/types';\nimport type { UniformGroup } from '../../rendering/renderers/shared/shader/UniformGroup';\nimport type { UniformUploadFunction } from './uniformSyncFunctions';\n\nexport function generateUniformsSyncPolyfill(\n    group: UniformGroup,\n    uniformData: Record<string, GlUniformData>\n): UniformsSyncCallback\n{\n    // loop through all the uniforms..\n    const functionMap: Record<string, UniformUploadFunction> = {};\n\n    for (const i in group.uniformStructures)\n    {\n        if (!uniformData[i]) continue;\n\n        const uniform = group.uniformStructures[i];\n\n        let parsed = false;\n\n        for (let j = 0; j < uniformParsers.length; j++)\n        {\n            const parser = uniformParsers[j];\n\n            if (uniform.type === parser.type && parser.test(uniform))\n            {\n                functionMap[i] = uniformParserFunctions[j];\n\n                parsed = true;\n\n                break;\n            }\n        }\n\n        // if not parsed...\n\n        if (!parsed)\n        {\n            const templateType = uniform.size === 1 ? uniformSingleParserFunctions : uniformArrayParserFunctions;\n\n            functionMap[i] = templateType[uniform.type];\n        }\n    }\n\n    return (\n        ud: Record<string, any>,\n        uv: Record<string, any>,\n        renderer: WebGLRenderer) =>\n    {\n        const gl = renderer.gl;\n\n        for (const i in functionMap)\n        {\n            const v = uv[i];\n            const cu = ud[i];\n            const cv = ud[i].value;\n\n            functionMap[i](i, cu, cv, v, ud, uv, gl);\n        }\n    };\n}\n","import { GlUboSystem } from '../rendering/renderers/gl/GlUboSystem';\nimport { GlShaderSystem } from '../rendering/renderers/gl/shader/GlShaderSystem';\nimport { GlUniformGroupSystem } from '../rendering/renderers/gl/shader/GlUniformGroupSystem';\nimport { GpuUboSystem } from '../rendering/renderers/gpu/GpuUboSystem';\nimport { UboSystem } from '../rendering/renderers/shared/shader/UboSystem';\nimport { AbstractRenderer } from '../rendering/renderers/shared/system/AbstractRenderer';\nimport { generateShaderSyncPolyfill } from './shader/generateShaderSyncPolyfill';\nimport {\n    generateUboSyncPolyfillSTD40,\n    generateUboSyncPolyfillWGSL\n} from './ubo/generateUboSyncPolyfill';\nimport { generateUniformsSyncPolyfill } from './uniforms/generateUniformsSyncPolyfill';\n\nfunction selfInstall()\n{\n    Object.assign(AbstractRenderer.prototype, {\n        // override unsafeEval check, as we don't need to use it\n        _unsafeEvalCheck()\n        {\n            // Do nothing, don't throw error\n        },\n    });\n\n    Object.assign(UboSystem.prototype, {\n        // override unsafeEval check, as we don't need to use it\n        _systemCheck()\n        {\n            // Do nothing, don't throw error\n        },\n    });\n\n    Object.assign(GlUniformGroupSystem.prototype, {\n        // use polyfill which avoids eval method\n        _generateUniformsSync: generateUniformsSyncPolyfill,\n    });\n\n    Object.assign(GlUboSystem.prototype, {\n        // use polyfill which avoids eval method\n        _generateUboSync: generateUboSyncPolyfillSTD40,\n    });\n\n    Object.assign(GpuUboSystem.prototype, {\n        // use polyfill which avoids eval method\n        _generateUboSync: generateUboSyncPolyfillWGSL,\n    });\n\n    Object.assign(GlShaderSystem.prototype, {\n        // use polyfill which avoids eval method\n        _generateShaderSync: generateShaderSyncPolyfill,\n    });\n}\n\nselfInstall();\n"],"names":["UniformGroup","resource","BufferResource","TextureSource","TextureStyle","uboParserFunctions","name","data","offset","uv","_v","matrix","v","uboSingleFunctionsWGSL","_name","_uv","i","uboSingleFunctionsSTD40","WGSL_TO_STD40_SIZE","uboElement","WGSL_ALIGN_SIZE_DATA","uniformParsers","uniformSingleParserFunctions","cu","cv","ud","gl","_cu","_cv","uniformArrayParserFunctions","uniformParserFunctions","generateUniformsSyncPolyfill","s","m","r","o","e","n","a","AbstractRenderer","UboSystem","GlUniformGroupSystem","GlUboSystem","y","GpuUboSystem","GlShaderSystem"],"mappings":"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"}