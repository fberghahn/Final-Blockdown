{"version":3,"file":"testImageFormat.js","sources":["../../../../src/assets/detections/utils/testImageFormat.ts"],"sourcesContent":["export async function testImageFormat(imageData: string): Promise<boolean>\n{\n    // Some browsers currently do not support createImageBitmap with Blob, so new Image() is preferred when exist.\n    // See https://caniuse.com/createimagebitmap for more information.\n\n    if ('Image' in globalThis)\n    {\n        return new Promise<boolean>((resolve) =>\n        {\n            const image = new Image();\n\n            image.onload = () =>\n            {\n                resolve(true);\n            };\n            image.onerror = () =>\n            {\n                resolve(false);\n            };\n            image.src = imageData;\n        });\n    }\n\n    if ('createImageBitmap' in globalThis && 'fetch' in globalThis)\n    {\n        try\n        {\n            const blob = await (await fetch(imageData)).blob();\n\n            await createImageBitmap(blob);\n        }\n        catch (e)\n        {\n            return false;\n        }\n\n        return true;\n    }\n\n    return false;\n}\n"],"names":[],"mappings":";;;AAAA,eAAsB,gBAAgB,SACtC,EAAA;AAII,EAAA,IAAI,WAAW,UACf,EAAA;AACI,IAAO,OAAA,IAAI,OAAiB,CAAA,CAAC,OAC7B,KAAA;AACI,MAAM,MAAA,KAAA,GAAQ,IAAI,KAAM,EAAA,CAAA;AAExB,MAAA,KAAA,CAAM,SAAS,MACf;AACI,QAAA,OAAA,CAAQ,IAAI,CAAA,CAAA;AAAA,OAChB,CAAA;AACA,MAAA,KAAA,CAAM,UAAU,MAChB;AACI,QAAA,OAAA,CAAQ,KAAK,CAAA,CAAA;AAAA,OACjB,CAAA;AACA,MAAA,KAAA,CAAM,GAAM,GAAA,SAAA,CAAA;AAAA,KACf,CAAA,CAAA;AAAA,GACL;AAEA,EAAI,IAAA,mBAAA,IAAuB,UAAc,IAAA,OAAA,IAAW,UACpD,EAAA;AACI,IACA,IAAA;AACI,MAAA,MAAM,OAAO,MAAO,CAAA,MAAM,KAAM,CAAA,SAAS,GAAG,IAAK,EAAA,CAAA;AAEjD,MAAA,MAAM,kBAAkB,IAAI,CAAA,CAAA;AAAA,aAEzB,CACP,EAAA;AACI,MAAO,OAAA,KAAA,CAAA;AAAA,KACX;AAEA,IAAO,OAAA,IAAA,CAAA;AAAA,GACX;AAEA,EAAO,OAAA,KAAA,CAAA;AACX;;;;"}