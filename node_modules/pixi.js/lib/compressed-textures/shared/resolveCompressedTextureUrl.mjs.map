{"version":3,"file":"resolveCompressedTextureUrl.mjs","sources":["../../../src/compressed-textures/shared/resolveCompressedTextureUrl.ts"],"sourcesContent":["import { Resolver } from '../../assets/resolver/Resolver';\nimport { checkExtension } from '../../assets/utils/checkExtension';\nimport { ExtensionType } from '../../extensions/Extensions';\n\nimport type { ResolveURLParser } from '../../assets/resolver/types';\nimport type { UnresolvedAsset } from '../../assets/types';\n\nexport const validFormats = ['basis', 'bc7', 'bc6h', 'astc', 'etc2', 'bc5', 'bc4', 'bc3', 'bc2', 'bc1', 'eac'];\n\nexport const resolveCompressedTextureUrl = {\n    extension: ExtensionType.ResolveParser,\n    test: (value: string) =>\n        checkExtension(value, ['.ktx', '.ktx2', '.dds']),\n    parse: (value: string): UnresolvedAsset =>\n    {\n        let format;\n\n        const splitValue = value.split('.');\n\n        if (splitValue.length > 2)\n        {\n            const newFormat = splitValue[splitValue.length - 2];\n\n            if (validFormats.includes(newFormat))\n            {\n                format = newFormat;\n            }\n        }\n        else\n        {\n            format = splitValue[splitValue.length - 1];\n        }\n\n        return {\n            resolution: parseFloat(Resolver.RETINA_PREFIX.exec(value)?.[1] ?? '1'),\n            format,\n            src: value,\n        };\n    }\n} as ResolveURLParser;\n"],"names":[],"mappings":";;;;;AAOO,MAAM,YAAe,GAAA,CAAC,OAAS,EAAA,KAAA,EAAO,MAAQ,EAAA,MAAA,EAAQ,MAAQ,EAAA,KAAA,EAAO,KAAO,EAAA,KAAA,EAAO,KAAO,EAAA,KAAA,EAAO,KAAK,EAAA;AAEtG,MAAM,2BAA8B,GAAA;AAAA,EACvC,WAAW,aAAc,CAAA,aAAA;AAAA,EACzB,IAAA,EAAM,CAAC,KACH,KAAA,cAAA,CAAe,OAAO,CAAC,MAAA,EAAQ,OAAS,EAAA,MAAM,CAAC,CAAA;AAAA,EACnD,KAAA,EAAO,CAAC,KACR,KAAA;AACI,IAAI,IAAA,MAAA,CAAA;AAEJ,IAAM,MAAA,UAAA,GAAa,KAAM,CAAA,KAAA,CAAM,GAAG,CAAA,CAAA;AAElC,IAAI,IAAA,UAAA,CAAW,SAAS,CACxB,EAAA;AACI,MAAA,MAAM,SAAY,GAAA,UAAA,CAAW,UAAW,CAAA,MAAA,GAAS,CAAC,CAAA,CAAA;AAElD,MAAI,IAAA,YAAA,CAAa,QAAS,CAAA,SAAS,CACnC,EAAA;AACI,QAAS,MAAA,GAAA,SAAA,CAAA;AAAA,OACb;AAAA,KAGJ,MAAA;AACI,MAAS,MAAA,GAAA,UAAA,CAAW,UAAW,CAAA,MAAA,GAAS,CAAC,CAAA,CAAA;AAAA,KAC7C;AAEA,IAAO,OAAA;AAAA,MACH,UAAA,EAAY,WAAW,QAAS,CAAA,aAAA,CAAc,KAAK,KAAK,CAAA,GAAI,CAAC,CAAA,IAAK,GAAG,CAAA;AAAA,MACrE,MAAA;AAAA,MACA,GAAK,EAAA,KAAA;AAAA,KACT,CAAA;AAAA,GACJ;AACJ;;;;"}