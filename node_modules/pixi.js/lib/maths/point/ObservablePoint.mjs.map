{"version":3,"file":"ObservablePoint.mjs","sources":["../../../src/maths/point/ObservablePoint.ts"],"sourcesContent":["import type { PointData } from './PointData';\nimport type { PointLike } from './PointLike';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ObservablePoint extends PixiMixins.ObservablePoint { }\n\n/**\n * Observer used to listen for observable point changes.\n * @memberof maths\n */\nexport interface Observer<T>\n{\n    /** Callback to call when the point has updated. */\n    _onUpdate: (point?: T) => void;\n}\n\n/**\n * The ObservablePoint object represents a location in a two-dimensional coordinate system, where `x` represents\n * the position on the horizontal axis and `y` represents the position on the vertical axis.\n *\n * An `ObservablePoint` is a point that triggers the `onUpdate` method on an observer when the point's position is changed.\n * @memberof maths\n */\nexport class ObservablePoint implements PointLike\n{\n    /** @ignore */\n    public _x: number;\n    /** @ignore */\n    public _y: number;\n\n    /** This object used to call the `onUpdate` callback when the point changes. */\n    private readonly _observer: Observer<ObservablePoint>;\n\n    /**\n     * Creates a new `ObservablePoint`\n     * @param observer - Observer to pass to listen for change events.\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    constructor(observer: Observer<ObservablePoint>, x?: number, y?: number)\n    {\n        this._x = x || 0;\n        this._y = y || 0;\n\n        this._observer = observer;\n    }\n\n    /**\n     * Creates a clone of this point.\n     * @param observer - Optional observer to pass to the new observable point.\n     * @returns a copy of this observable point\n     */\n    public clone(observer?: Observer<ObservablePoint>): ObservablePoint\n    {\n        return new ObservablePoint(observer ?? this._observer, this._x, this._y);\n    }\n\n    /**\n     * Sets the point to a new `x` and `y` position.\n     * If `y` is omitted, both `x` and `y` will be set to `x`.\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=x] - position of the point on the y axis\n     * @returns The observable point instance itself\n     */\n    public set(x = 0, y = x): this\n    {\n        if (this._x !== x || this._y !== y)\n        {\n            this._x = x;\n            this._y = y;\n            this._observer._onUpdate(this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Copies x and y from the given point (`p`)\n     * @param p - The point to copy from. Can be any of type that is or extends `PointData`\n     * @returns The observable point instance itself\n     */\n    public copyFrom(p: PointData): this\n    {\n        if (this._x !== p.x || this._y !== p.y)\n        {\n            this._x = p.x;\n            this._y = p.y;\n            this._observer._onUpdate(this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Copies this point's x and y into that of the given point (`p`)\n     * @param p - The point to copy to. Can be any of type that is or extends `PointData`\n     * @returns The point (`p`) with values updated\n     */\n    public copyTo<T extends PointLike>(p: T): T\n    {\n        p.set(this._x, this._y);\n\n        return p;\n    }\n\n    /**\n     * Accepts another point (`p`) and returns `true` if the given point is equal to this point\n     * @param p - The point to check\n     * @returns Returns `true` if both `x` and `y` are equal\n     */\n    public equals(p: PointData): boolean\n    {\n        return (p.x === this._x) && (p.y === this._y);\n    }\n\n    // #if _DEBUG\n    public toString(): string\n    {\n        return `[pixi.js/math:ObservablePoint x=${0} y=${0} scope=${this._observer}]`;\n    }\n    // #endif\n\n    /** Position of the observable point on the x axis. */\n    get x(): number\n    {\n        return this._x;\n    }\n\n    set x(value: number)\n    {\n        if (this._x !== value)\n        {\n            this._x = value;\n            this._observer._onUpdate(this);\n        }\n    }\n\n    /** Position of the observable point on the y axis. */\n    get y(): number\n    {\n        return this._y;\n    }\n\n    set y(value: number)\n    {\n        if (this._y !== value)\n        {\n            this._y = value;\n            this._observer._onUpdate(this);\n        }\n    }\n}\n"],"names":[],"mappings":"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"}