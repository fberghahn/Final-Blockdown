{"version":3,"file":"injectBits.js","sources":["../../../../../src/rendering/high-shader/compiler/utils/injectBits.ts"],"sourcesContent":["/**\n * takes a shader src and replaces any hooks with the HighFragment code.\n * @param templateSrc - the program src template\n * @param fragmentParts - the fragments to inject\n */\nexport function injectBits(templateSrc: string, fragmentParts: Record<string, string[]>): string\n{\n    let out = templateSrc;\n\n    for (const i in fragmentParts)\n    {\n        const parts = fragmentParts[i];\n\n        const toInject = parts.join('\\n');\n\n        if (toInject.length)\n        {\n            out = out.replace(`{{${i}}}`, `//-----${i} START-----//\\n${parts.join('\\n')}\\n//----${i} FINISH----//`);\n        }\n\n        else\n        {\n            out = out.replace(`{{${i}}}`, '');\n        }\n    }\n\n    return out;\n}\n"],"names":[],"mappings":";;;AAKgB,SAAA,UAAA,CAAW,aAAqB,aAChD,EAAA;AACI,EAAA,IAAI,GAAM,GAAA,WAAA,CAAA;AAEV,EAAA,KAAA,MAAW,KAAK,aAChB,EAAA;AACI,IAAM,MAAA,KAAA,GAAQ,cAAc,CAAC,CAAA,CAAA;AAE7B,IAAM,MAAA,QAAA,GAAW,KAAM,CAAA,IAAA,CAAK,IAAI,CAAA,CAAA;AAEhC,IAAA,IAAI,SAAS,MACb,EAAA;AACI,MAAA,GAAA,GAAM,IAAI,OAAQ,CAAA,CAAA,EAAA,EAAK,CAAC,CAAA,EAAA,CAAA,EAAM,UAAU,CAAC,CAAA;AAAA,EAAkB,KAAA,CAAM,IAAK,CAAA,IAAI,CAAC,CAAA;AAAA,MAAA,EAAW,CAAC,CAAe,aAAA,CAAA,CAAA,CAAA;AAAA,KAI1G,MAAA;AACI,MAAA,GAAA,GAAM,GAAI,CAAA,OAAA,CAAQ,CAAK,EAAA,EAAA,CAAC,MAAM,EAAE,CAAA,CAAA;AAAA,KACpC;AAAA,GACJ;AAEA,EAAO,OAAA,GAAA,CAAA;AACX;;;;"}