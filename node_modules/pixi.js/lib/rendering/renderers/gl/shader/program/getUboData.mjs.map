{"version":3,"file":"getUboData.mjs","sources":["../../../../../../src/rendering/renderers/gl/shader/program/getUboData.ts"],"sourcesContent":["import type { GlUniformBlockData } from '../GlProgram';\n\n/**\n * returns the uniform block data from the program\n * @private\n * @param program - the webgl program\n * @param gl - the WebGL context\n * @returns {object} the uniform data for this program\n */\nexport function getUboData(program: WebGLProgram, gl: WebGL2RenderingContext): Record<string, GlUniformBlockData>\n{\n    // if uniform buffer data is not supported, early out\n    if (!gl.ACTIVE_UNIFORM_BLOCKS) return {};\n\n    const uniformBlocks: Record<string, GlUniformBlockData> = {};\n\n    // const totalUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n    const totalUniformsBlocks = gl.getProgramParameter(program, gl.ACTIVE_UNIFORM_BLOCKS);\n\n    for (let i = 0; i < totalUniformsBlocks; i++)\n    {\n        const name = gl.getActiveUniformBlockName(program, i);\n        const uniformBlockIndex = gl.getUniformBlockIndex(program, name);\n\n        const size = gl.getActiveUniformBlockParameter(program, i, gl.UNIFORM_BLOCK_DATA_SIZE);\n\n        uniformBlocks[name] = {\n            name,\n            index: uniformBlockIndex,\n            size,\n        };\n    }\n\n    return uniformBlocks;\n}\n"],"names":[],"mappings":";AASgB,SAAA,UAAA,CAAW,SAAuB,EAClD,EAAA;AAEI,EAAA,IAAI,CAAC,EAAG,CAAA,qBAAA;AAAuB,IAAA,OAAO,EAAC,CAAA;AAEvC,EAAA,MAAM,gBAAoD,EAAC,CAAA;AAI3D,EAAA,MAAM,mBAAsB,GAAA,EAAA,CAAG,mBAAoB,CAAA,OAAA,EAAS,GAAG,qBAAqB,CAAA,CAAA;AAEpF,EAAA,KAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,mBAAA,EAAqB,CACzC,EAAA,EAAA;AACI,IAAA,MAAM,IAAO,GAAA,EAAA,CAAG,yBAA0B,CAAA,OAAA,EAAS,CAAC,CAAA,CAAA;AACpD,IAAA,MAAM,iBAAoB,GAAA,EAAA,CAAG,oBAAqB,CAAA,OAAA,EAAS,IAAI,CAAA,CAAA;AAE/D,IAAA,MAAM,OAAO,EAAG,CAAA,8BAAA,CAA+B,OAAS,EAAA,CAAA,EAAG,GAAG,uBAAuB,CAAA,CAAA;AAErF,IAAA,aAAA,CAAc,IAAI,CAAI,GAAA;AAAA,MAClB,IAAA;AAAA,MACA,KAAO,EAAA,iBAAA;AAAA,MACP,IAAA;AAAA,KACJ,CAAA;AAAA,GACJ;AAEA,EAAO,OAAA,aAAA,CAAA;AACX;;;;"}