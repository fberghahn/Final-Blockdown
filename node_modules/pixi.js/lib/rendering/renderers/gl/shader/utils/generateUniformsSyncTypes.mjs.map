{"version":3,"file":"generateUniformsSyncTypes.mjs","sources":["../../../../../../src/rendering/renderers/gl/shader/utils/generateUniformsSyncTypes.ts"],"sourcesContent":["// cu = Cached value's uniform data field\n// cv = Cached value\n// v = value to upload\n// ud = uniformData\n// uv = uniformValue\n\nimport type { UNIFORM_TYPES } from '../../../shared/shader/types';\n\nexport type ArraySetterFunction = (v: any, location: WebGLUniformLocation, gl: any) => void;\n\nexport const UNIFORM_TO_SINGLE_SETTERS: Record<UNIFORM_TYPES | string, string> = {\n    f32: `if (cv !== v) {\n            cu.value = v;\n            gl.uniform1f(location, v);\n        }`,\n    'vec2<f32>': `if (cv[0] !== v[0] || cv[1] !== v[1]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2f(location, v[0], v[1]);\n        }`,\n    'vec3<f32>': `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3f(location, v[0], v[1], v[2]);\n        }`,\n    'vec4<f32>': `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4f(location, v[0], v[1], v[2], v[3]);\n        }`,\n    i32: `if (cv !== v) {\n            cu.value = v;\n            gl.uniform1i(location, v);\n        }`,\n    'vec2<i32>': `if (cv[0] !== v[0] || cv[1] !== v[1]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2i(location, v[0], v[1]);\n        }`,\n    'vec3<i32>': `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3i(location, v[0], v[1], v[2]);\n        }`,\n    'vec4<i32>': `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4i(location, v[0], v[1], v[2], v[3]);\n        }`,\n    u32: `if (cv !== v) {\n            cu.value = v;\n            gl.uniform1ui(location, v);\n        }`,\n    'vec2<u32>': `if (cv[0] !== v[0] || cv[1] !== v[1]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2ui(location, v[0], v[1]);\n        }`,\n    'vec3<u32>': `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3ui(location, v[0], v[1], v[2]);\n        }`,\n    'vec4<u32>': `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4ui(location, v[0], v[1], v[2], v[3]);\n        }`,\n    bool: `if (cv !== v) {\n            cu.value = v;\n            gl.uniform1i(location, v);\n        }`,\n    'vec2<bool>': `if (cv[0] !== v[0] || cv[1] !== v[1]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2i(location, v[0], v[1]);\n        }`,\n    'vec3<bool>': `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3i(location, v[0], v[1], v[2]);\n        }`,\n    'vec4<bool>': `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4i(location, v[0], v[1], v[2], v[3]);\n        }`,\n    'mat2x2<f32>': `gl.uniformMatrix2fv(location, false, v);`,\n    'mat3x3<f32>': `gl.uniformMatrix3fv(location, false, v);`,\n    'mat4x4<f32>': `gl.uniformMatrix4fv(location, false, v);`,\n};\n\nexport const UNIFORM_TO_ARRAY_SETTERS: Record<UNIFORM_TYPES | string, string> = {\n    f32: `gl.uniform1fv(location, v);`,\n    'vec2<f32>': `gl.uniform2fv(location, v);`,\n    'vec3<f32>': `gl.uniform3fv(location, v);`,\n    'vec4<f32>': `gl.uniform4fv(location, v);`,\n    'mat2x2<f32>': `gl.uniformMatrix2fv(location, false, v);`,\n    'mat3x3<f32>': `gl.uniformMatrix3fv(location, false, v);`,\n    'mat4x4<f32>': `gl.uniformMatrix4fv(location, false, v);`,\n    i32: `gl.uniform1iv(location, v);`,\n    'vec2<i32>': `gl.uniform2iv(location, v);`,\n    'vec3<i32>': `gl.uniform3iv(location, v);`,\n    'vec4<i32>': `gl.uniform4iv(location, v);`,\n    u32: `gl.uniform1iv(location, v);`,\n    'vec2<u32>': `gl.uniform2iv(location, v);`,\n    'vec3<u32>': `gl.uniform3iv(location, v);`,\n    'vec4<u32>': `gl.uniform4iv(location, v);`,\n    bool: `gl.uniform1iv(location, v);`,\n    'vec2<bool>': `gl.uniform2iv(location, v);`,\n    'vec3<bool>': `gl.uniform3iv(location, v);`,\n    'vec4<bool>': `gl.uniform4iv(location, v);`,\n};\n"],"names":[],"mappings":";AAUO,MAAM,yBAAoE,GAAA;AAAA,EAC7E,GAAK,EAAA,CAAA;AAAA;AAAA;AAAA,SAAA,CAAA;AAAA,EAIL,WAAa,EAAA,CAAA;AAAA;AAAA;AAAA;AAAA,SAAA,CAAA;AAAA,EAKb,WAAa,EAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA,CAAA;AAAA,EAMb,WAAa,EAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA,CAAA;AAAA,EAOb,GAAK,EAAA,CAAA;AAAA;AAAA;AAAA,SAAA,CAAA;AAAA,EAIL,WAAa,EAAA,CAAA;AAAA;AAAA;AAAA;AAAA,SAAA,CAAA;AAAA,EAKb,WAAa,EAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA,CAAA;AAAA,EAMb,WAAa,EAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA,CAAA;AAAA,EAOb,GAAK,EAAA,CAAA;AAAA;AAAA;AAAA,SAAA,CAAA;AAAA,EAIL,WAAa,EAAA,CAAA;AAAA;AAAA;AAAA;AAAA,SAAA,CAAA;AAAA,EAKb,WAAa,EAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA,CAAA;AAAA,EAMb,WAAa,EAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA,CAAA;AAAA,EAOb,IAAM,EAAA,CAAA;AAAA;AAAA;AAAA,SAAA,CAAA;AAAA,EAIN,YAAc,EAAA,CAAA;AAAA;AAAA;AAAA;AAAA,SAAA,CAAA;AAAA,EAKd,YAAc,EAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA,CAAA;AAAA,EAMd,YAAc,EAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA,CAAA;AAAA,EAOd,aAAe,EAAA,CAAA,wCAAA,CAAA;AAAA,EACf,aAAe,EAAA,CAAA,wCAAA,CAAA;AAAA,EACf,aAAe,EAAA,CAAA,wCAAA,CAAA;AACnB,EAAA;AAEO,MAAM,wBAAmE,GAAA;AAAA,EAC5E,GAAK,EAAA,CAAA,2BAAA,CAAA;AAAA,EACL,WAAa,EAAA,CAAA,2BAAA,CAAA;AAAA,EACb,WAAa,EAAA,CAAA,2BAAA,CAAA;AAAA,EACb,WAAa,EAAA,CAAA,2BAAA,CAAA;AAAA,EACb,aAAe,EAAA,CAAA,wCAAA,CAAA;AAAA,EACf,aAAe,EAAA,CAAA,wCAAA,CAAA;AAAA,EACf,aAAe,EAAA,CAAA,wCAAA,CAAA;AAAA,EACf,GAAK,EAAA,CAAA,2BAAA,CAAA;AAAA,EACL,WAAa,EAAA,CAAA,2BAAA,CAAA;AAAA,EACb,WAAa,EAAA,CAAA,2BAAA,CAAA;AAAA,EACb,WAAa,EAAA,CAAA,2BAAA,CAAA;AAAA,EACb,GAAK,EAAA,CAAA,2BAAA,CAAA;AAAA,EACL,WAAa,EAAA,CAAA,2BAAA,CAAA;AAAA,EACb,WAAa,EAAA,CAAA,2BAAA,CAAA;AAAA,EACb,WAAa,EAAA,CAAA,2BAAA,CAAA;AAAA,EACb,IAAM,EAAA,CAAA,2BAAA,CAAA;AAAA,EACN,YAAc,EAAA,CAAA,2BAAA,CAAA;AAAA,EACd,YAAc,EAAA,CAAA,2BAAA,CAAA;AAAA,EACd,YAAc,EAAA,CAAA,2BAAA,CAAA;AAClB;;;;"}