{"version":3,"file":"convertFillInputToFillStyle.mjs","sources":["../../../../../src/scene/graphics/shared/utils/convertFillInputToFillStyle.ts"],"sourcesContent":["import { Color } from '../../../../color/Color';\nimport { Matrix } from '../../../../maths/matrix/Matrix';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture';\nimport { FillGradient } from '../fill/FillGradient';\nimport { FillPattern } from '../fill/FillPattern';\n\nimport type { ColorSource } from '../../../../color/Color';\nimport type {\n    ConvertedFillStyle,\n    FillStyle,\n    FillStyleInputs,\n    PatternFillStyle,\n} from '../GraphicsContext';\n\nexport function convertFillInputToFillStyle(\n    value: FillStyleInputs,\n    defaultStyle: ConvertedFillStyle\n): ConvertedFillStyle\n{\n    if (value === undefined || value === null)\n    {\n        return null;\n    }\n\n    let fillStyleToParse: ConvertedFillStyle;\n    let styleToMerge: FillStyleInputs;\n\n    if ((value as PatternFillStyle)?.fill)\n    {\n        styleToMerge = (value as PatternFillStyle).fill;\n        fillStyleToParse = { ...defaultStyle, ...(value as PatternFillStyle) };\n    }\n    else\n    {\n        styleToMerge = value;\n        fillStyleToParse = defaultStyle;\n    }\n\n    if (Color.isColorLike(styleToMerge as ColorSource))\n    {\n        const temp = Color.shared.setValue(styleToMerge as ColorSource ?? 0);\n        const opts: ConvertedFillStyle = {\n            ...fillStyleToParse,\n            color: temp.toNumber(),\n            alpha: temp.alpha === 1 ? fillStyleToParse.alpha : temp.alpha,\n            texture: Texture.WHITE,\n        };\n\n        return opts;\n    }\n    else if (styleToMerge instanceof FillPattern)\n    {\n        const pattern = styleToMerge as FillPattern;\n\n        return {\n            ...fillStyleToParse,\n            color: 0xffffff,\n            texture: pattern.texture,\n            matrix: pattern.transform,\n            fill: fillStyleToParse.fill ?? null,\n        };\n    }\n\n    // // TODO Texture\n    else if (styleToMerge instanceof FillGradient)\n    {\n        const gradient = styleToMerge as FillGradient;\n\n        gradient.buildLinearGradient();\n\n        return {\n            ...fillStyleToParse,\n            color: 0xffffff,\n            texture: gradient.texture,\n            matrix: gradient.transform,\n        };\n    }\n\n    const style: FillStyle = { ...defaultStyle, ...(value as FillStyle) };\n\n    if (style.texture)\n    {\n        if (style.texture !== Texture.WHITE)\n        {\n            const m = style.matrix?.invert() || new Matrix();\n\n            m.scale(\n                1 / style.texture.frame.width,\n                1 / style.texture.frame.height\n            );\n\n            style.matrix = m;\n        }\n\n        const sourceStyle = style.texture.source.style;\n\n        if (sourceStyle.addressMode === 'clamp-to-edge')\n        {\n            sourceStyle.addressMode = 'repeat';\n        }\n    }\n\n    const color = Color.shared.setValue(style.color);\n\n    style.alpha *= color.alpha;\n    style.color = color.toNumber();\n    style.matrix = style.matrix ? style.matrix.clone() : null; // todo: lets optimise this!\n\n    // its a regular fill style!\n    return style as ConvertedFillStyle;\n}\n"],"names":[],"mappings":"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"}