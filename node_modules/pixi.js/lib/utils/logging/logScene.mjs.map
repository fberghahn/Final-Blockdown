{"version":3,"file":"logScene.mjs","sources":["../../../src/utils/logging/logScene.ts"],"sourcesContent":["/* eslint-disable no-console */\n\nimport { Sprite } from '../../scene/sprite/Sprite';\n\nimport type { Container } from '../../scene/container/Container';\nimport type { RenderGroup } from '../../scene/container/RenderGroup';\n\nconst colors = [\n    '#000080', // Navy Blue\n    '#228B22', // Forest Green\n    '#8B0000', // Dark Red\n    '#4169E1', // Royal Blue\n    '#008080', // Teal\n    '#800000', // Maroon\n    '#9400D3', // Dark Violet\n    '#FF8C00', // Dark Orange\n    '#556B2F', // Olive Green\n    '#8B008B' // Dark Magenta\n];\n\nlet colorTick = 0;\n\nexport function logScene(container: Container, depth = 0, data: {color?: string} = { color: '#000000' })\n{\n    if (container.isRenderGroupRoot)\n    {\n        data.color = colors[colorTick++];\n    }\n\n    //    turn depth into number of spaces:\n    let spaces = '';\n\n    for (let i = 0; i < depth; i++)\n    {\n        spaces += '    ';\n    }\n\n    let label = container.label;\n\n    if (!label && container instanceof Sprite)\n    {\n        label = `sprite:${container.texture.label}`;\n    }\n\n    // eslint-disable-next-line max-len\n    let output = `%c ${spaces}|- ${label} (worldX:${container.worldTransform.tx}, relativeRenderX:${container.relativeGroupTransform.tx}, renderX:${container.groupTransform.tx}, localX:${container.x})`;\n\n    if (container.isRenderGroupRoot)\n    {\n        output += ' (RenderGroup)';\n    }\n\n    if (container.filters)\n    {\n        output += '(*filters)';\n    }\n\n    console.log(output, `color:${data.color}; font-weight:bold;`);\n\n    depth++;\n\n    for (let i = 0; i < container.children.length; i++)\n    {\n        const child = container.children[i];\n\n        logScene(child, depth, { ...data });\n    }\n}\n\nexport function logRenderGroupScene(\n    renderGroup: RenderGroup, depth = 0,\n    data: {index: number, color?: string} = { index: 0, color: '#000000' }\n)\n{\n    // turn depth into number of spaces:\n    let spaces = '';\n\n    for (let i = 0; i < depth; i++)\n    {\n        spaces += '    ';\n    }\n\n    const output = `%c ${spaces}- ${data.index}: ${renderGroup.root.label} worldX:${renderGroup.worldTransform.tx}`;\n\n    console.log(output, `color:${data.color}; font-weight:bold;`);\n\n    depth++;\n\n    for (let i = 0; i < renderGroup.renderGroupChildren.length; i++)\n    {\n        const child = renderGroup.renderGroupChildren[i];\n\n        logRenderGroupScene(child, depth, { ...data, index: i });\n    }\n}\n"],"names":[],"mappings":"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"}