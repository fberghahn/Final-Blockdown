{"version":3,"file":"getResolutionOfUrl.mjs","sources":["../../../src/utils/network/getResolutionOfUrl.ts"],"sourcesContent":["import { Resolver } from '../../assets/resolver/Resolver';\n\n/**\n * get the resolution / device pixel ratio of an asset by looking for the prefix\n * used by spritesheets and image urls\n * @memberof utils\n * @function getResolutionOfUrl\n * @param {string} url - the image path\n * @param {number} [defaultValue=1] - the defaultValue if no filename prefix is set.\n * @returns {number} resolution / device pixel ratio of an asset\n */\nexport function getResolutionOfUrl(url: string, defaultValue = 1): number\n{\n    const resolution = Resolver.RETINA_PREFIX?.exec(url);\n\n    if (resolution)\n    {\n        return parseFloat(resolution[1]);\n    }\n\n    return defaultValue;\n}\n"],"names":[],"mappings":";;;AAWgB,SAAA,kBAAA,CAAmB,GAAa,EAAA,YAAA,GAAe,CAC/D,EAAA;AACI,EAAA,MAAM,UAAa,GAAA,QAAA,CAAS,aAAe,EAAA,IAAA,CAAK,GAAG,CAAA,CAAA;AAEnD,EAAA,IAAI,UACJ,EAAA;AACI,IAAO,OAAA,UAAA,CAAW,UAAW,CAAA,CAAC,CAAC,CAAA,CAAA;AAAA,GACnC;AAEA,EAAO,OAAA,YAAA,CAAA;AACX;;;;"}